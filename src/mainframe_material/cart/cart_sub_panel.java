/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mainframe_material.cart;

import java.nio.charset.StandardCharsets;
import java.io.*;
import main.*;

/**
 *
 * @author meama
 */
public class cart_sub_panel extends javax.swing.JPanel {

    /**
     * Creates new form cart_sub_panel
     */
    public cart_sub_panel(String name, double price, int quantity, String catalog, int index_of_cart) {
        this.name = name;
        this.price = price;
        this.quantity = quantity;
        this.catalog = catalog;
        this.index_of_cart = index_of_cart;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quantity_num = new javax.swing.JLabel();
        remove_button = new javax.swing.JButton();
        menu_name = new javax.swing.JLabel();
        constant_args_dontfixthis = new javax.swing.JLabel();
        total_price = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(996, 50));
        setMaximumSize(new java.awt.Dimension(996, 50));
        setPreferredSize(new java.awt.Dimension(996, 50));
        setSize(new java.awt.Dimension(996, 50));
        setLayout(null);

        quantity_num.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        menu_name.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        constant_args_dontfixthis.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        total_price.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        remove_button.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        remove_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_buttonActionPerformed(evt);
            }
        });

        quantity_num.setText(String.valueOf(quantity) + " x");
        add(quantity_num);
        quantity_num.setBounds(32, 17, 50, 35);

        remove_button.setText("ยกเลิก");
        add(remove_button);
        remove_button.setBounds(741, 25, 150, 25);

        menu_name.setText(name);
        add(menu_name);
        menu_name.setBounds(75, 17, 200, 35);

        constant_args_dontfixthis.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        constant_args_dontfixthis.setText("ราคารวม : ");
        add(constant_args_dontfixthis);
        constant_args_dontfixthis.setBounds(350, 17, 100, 35);

        total_price.setText(String.valueOf(quantity * price));
        add(total_price);
        total_price.setBounds(450, 17, 50, 35);
    }// </editor-fold>

    private void remove_buttonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_remove_buttonActionPerformed

        System.out.println("index = " + index_of_cart);
        int lineToEdit = index_of_cart;
        // src/restaurant_log/cart_log/cart_menu.txt
        String inputFilePath = "src/restaurant_log/cart_log/cart_menu.txt",
                outputFilePath = "src/restaurant_log/menu_list/temp_cart.txt";
        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8));
                BufferedWriter writer = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath, false), StandardCharsets.UTF_8))) {

            String line;
            int currentLine = 1;
            // write to temp
            while ((line = reader.readLine()) != null) {
                if (currentLine == lineToEdit) {
                    System.out.println("delete sucess");
                } else if (currentLine != lineToEdit) {
                    writer.write(line + "\n");
                }
                currentLine++;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        String inputFilePath2 = "src/restaurant_log/menu_list/temp_cart.txt",
                outputFilePath2 = "src/restaurant_log/cart_log/cart_menu.txt";
        try (BufferedReader reader2 = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath2),
                        StandardCharsets.UTF_8));
                BufferedWriter writer2 = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath2, false),
                                StandardCharsets.UTF_8))) {

            String line;
            while ((line = reader2.readLine()) != null) {
                writer2.write(line + "\n");
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
        Main.cart_reload();

    }// GEN-LAST:event_remove_buttonActionPerformed

    // Variables declaration - do not modify
    private javax.swing.JButton remove_button;
    private javax.swing.JLabel quantity_num;
    private javax.swing.JLabel menu_name;
    private javax.swing.JLabel constant_args_dontfixthis;
    private javax.swing.JLabel total_price;
    private String name;
    private double price;
    private int quantity;
    private String catalog;
    private int index_of_cart;
    // End of variables declaration

    public String getName() {
        return this.name;
    }

    public String getCatalog() {
        return this.catalog;
    }

    public double getPrice() {
        return this.price;
    }

    public int getQuantity() {
        return this.quantity;
    }

    public int getIndex() {
        return this.index_of_cart;
    }

}
