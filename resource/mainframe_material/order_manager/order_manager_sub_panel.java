package mainframe_material.order_manager;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

import main.Main;
import mainframe_material.cart.cart_sub_panel;

public class order_manager_sub_panel extends javax.swing.JPanel {

    /**
     * Creates new form order_manager_sub_panel
     */
    public order_manager_sub_panel(String table_num, String name, String quatity) {
        this.name = name;
        this.quantity = quatity;
        this.table_num = table_num;
        initComponents();
    }

    public order_manager_sub_panel() {
        this.name = "dawd";
        this.quantity = "dwad";
        this.table_num = "dawd";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        quantity_of_items = new javax.swing.JLabel();
        name_of_items = new javax.swing.JLabel();
        cancel_button = new javax.swing.JButton();
        done_button = new javax.swing.JButton();
        table_no = new javax.swing.JLabel();

        setBackground(new java.awt.Color(252, 250, 238));
        setPreferredSize(new java.awt.Dimension(985, 85));
        setSize(new java.awt.Dimension(985, 85));
        setMaximumSize(new java.awt.Dimension(985, 85));
        setMinimumSize(new java.awt.Dimension(985, 85));

        table_no.setFont(new java.awt.Font("Sukhumvit Set", 0, 16)); // NOI18N
        table_no.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        table_no.setText("โต๊ะ:" + table_num);

        quantity_of_items.setFont(new java.awt.Font("Sukhumvit Set", 0, 16)); // NOI18N
        quantity_of_items.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        quantity_of_items.setText(quantity);

        name_of_items.setFont(new java.awt.Font("Sukhumvit Set", 0, 16)); // NOI18N
        name_of_items.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        name_of_items.setText(name);

        cancel_button.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        cancel_button.setText("ยกเลิก");
        cancel_button.setFocusable(false);
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        done_button.setFont(new java.awt.Font("Sukhumvit Set", 0, 16));
        done_button.setText("เสร็จ");
        done_button.setFocusable(false);
        done_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                done_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(table_no)
                                .addGap(72, 72, 72)
                                .addComponent(quantity_of_items)
                                .addGap(185, 185, 185)
                                .addComponent(name_of_items)
                                .addPreferredGap(
                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        163,
                                        Short.MAX_VALUE)
                                .addComponent(done_button,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(cancel_button,
                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                        100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(quantity_of_items)
                                        .addComponent(name_of_items)
                                        .addComponent(table_no))
                                .addContainerGap(36, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                .createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(
                                        javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cancel_button,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                32,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(done_button,
                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                32,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)));
    }// </editor-fold>

    // Variables declaration - do not modify
    private javax.swing.JButton cancel_button;
    private javax.swing.JButton done_button;
    private javax.swing.JLabel name_of_items;
    private javax.swing.JLabel quantity_of_items;
    private String name;
    private String quantity;
    private String table_num;
    private javax.swing.JLabel table_no;
    // End of variables declaration

    private void done_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        String inputFilePath = "resource/restaurant_log/user_order.txt";
        String outputFilePath;
        int index = 0, index_temp = 0;
        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] arrOfStr = line.split(",");
                String name = arrOfStr[2];
                String table_num = arrOfStr[0];
                if (name.equals(this.name) && table_num.equals(this.table_num)) {
                    break;
                }
                index++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        inputFilePath = "resource/restaurant_log/user_order.txt";
        outputFilePath = "resource/restaurant_log/cart_log/user_order_temp.txt";

        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8));
                BufferedWriter writer = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath),
                                StandardCharsets.UTF_8))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (index == index_temp) {
                    String data[] = line.split(",");
                    line = data[0] + "," + data[1] + "," + data[2] + "," + data[3] + "," + data[4] + "," + data[5] + ","
                            + data[6] + ",1";
                    writer.write(line);
                    writer.newLine();
                } else {
                    writer.write(line);
                    writer.newLine();
                }
                index_temp++;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        // rewrite to source
        inputFilePath = "resource/restaurant_log/cart_log/user_order_temp.txt";
        outputFilePath = "resource/restaurant_log/user_order.txt";

        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8));
                BufferedWriter writer = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath),
                                StandardCharsets.UTF_8))) {
            String line;
            // write to temp
            // write to temp
            while ((line = reader.readLine()) != null) {
                System.out.println("write");
                writer.write(line);
                writer.newLine();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        order_manager_panel.order_reload();
    }

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("removing");
        String inputFilePath = "resource/restaurant_log/user_order.txt",
                outputFilePath = "resource/restaurant_log/cart_log/user_order_temp.txt";

        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8));
                BufferedWriter writer = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath),
                                StandardCharsets.UTF_8))) {
            String line;

            // write to temp
            // write to temp
            while ((line = reader.readLine()) != null) {
                String[] arrOfStr = line.split(",");
                String name = arrOfStr[2];
                String table_num = arrOfStr[0];
                if (name.equals(this.name) && table_num.equals(this.table_num)) {
                    System.out.println("delete sucess");
                } else {
                    writer.write(line);
                    writer.newLine();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        // rewrite to source
        inputFilePath = "resource/restaurant_log/cart_log/user_order_temp.txt";
        outputFilePath = "resource/restaurant_log/user_order.txt";

        try (BufferedReader reader = new BufferedReader(
                new InputStreamReader(new FileInputStream(inputFilePath), StandardCharsets.UTF_8));
                BufferedWriter writer = new BufferedWriter(
                        new OutputStreamWriter(new FileOutputStream(outputFilePath),
                                StandardCharsets.UTF_8))) {
            String line;
            // write to temp
            // write to temp
            while ((line = reader.readLine()) != null) {
                System.out.println("write");
                writer.write(line);
                writer.newLine();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        order_manager_panel.order_reload();
    }
}
